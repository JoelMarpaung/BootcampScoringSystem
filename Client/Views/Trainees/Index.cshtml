@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Trainees List";
}

@*Filtering Trainees data*@
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="batch">Batch : </label>
            <select id="batch" class="form-control" onchange="changeBatch()"></select>
        </div>
    </div>
</div>

@*Trainees Data List*@
<div class="row">
    <div class="col-12">
        <table id="dataTraineeGrid" class="table table-striped table-bordered dt-responsive nowrap">
            <thead>
                <tr>
                    <th>Batch</th>
                    <th>Trainee Name</th>
                    <th>Grade</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody class="traineeDataTable"></tbody>
        </table>
    </div>
</div>
<hr />

@*Data Traine*@
<div id="traineeData" class="traineeData">
    <div class="row">
        <div id="traineeName" class="col-md-12">
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <h5>Class</h5>
        </div>
        <div id="traineeClass" class="col-md-5">
        </div>
        <div class="col-md-1">
            <h5>Grade</h5>
        </div>
        <div id="traineeGrade" class="col-md-5">
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <h5>Batch</h5>
        </div>
        <div id="traineeBatch" class="col-md-5">
        </div>
        <div class="col-md-1">
            <h5>Status</h5>
        </div>
        <div id="traineeStatus" class="col-md-5">
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <h5>Trainer</h5>
        </div>
        <div id="traineeTrainer" class="col-md-2">
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <h5><strong>Course Comprehension</strong></h5>
            <table id="courseComprehensionGrid" class="table table-bordered">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Materi</th>
                        <th>Nilai</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="courseComprehensionDataTable"></tbody>
            </table>
        </div>
        <div class="col-md-6">
            <h5><strong>Attitude</strong></h5>
            <table id="attitudeGrid" class="table table-bordered">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Character</th>
                        <th>Nilai</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="attitudeDataTable"></tbody>
            </table>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <h5><strong>Final Project</strong></h5>
            <table id="finalProjectGrid" class="table table-bordered">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Penilaian</th>
                        <th>Nilai</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="finalProjectDataTable"></tbody>
            </table>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-7">
                    <h5>Course Comprehension Score</h5>
                </div>
                <div id="traineeCourse" class="col-md-3">
                </div>
            </div>
            <div class="row">
                <div class="col-md-7">
                    <h5>Attitude Score</h5>
                </div>
                <div id="traineeAttitude" class="col-md-3">
                </div>
            </div>
            <div class="row">
                <div class="col-md-7">
                    <h5>Final Project Score</h5>
                </div>
                <div id="traineeProject" class="col-md-3">
                </div>
            </div>
            <div class="row">
                <div class="col-md-7">
                    <h5>Total Score</h5>
                </div>
                <div id="traineeTotal" class="col-md-3">
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
        </div>
        <div class="col-md-3">
            <button class="btn btn-block btn-success btnSubmit" onclick="return confirm()">Submit</button>
            @*<button class="btn btn-block btn-success btnPrint">Print</button>*@
        </div>
    </div>
</div>


@*Modal for Course Comprehension*@
<div class="modal fade" id="traineeModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="courseTitle modal-title">Course Comprehension</h4>
                <h4 class="attitudeTitle modal-title">Attitude</h4>
                <h4 class="projectTitle modal-title">Final Project</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="input-group">
                        <span class="input-group-addon">Score</span>
                        <input id="idEditModal" type="number" hidden />
                        <input id="idEditType" type="number" hidden />
                        <input id="score" type="number" class="form-control" placeholder="-" min="0" required>
                        &nbsp;&nbsp;&nbsp;
                        <button type="button" class="btnCourseUpdate btn btn-success" onclick="return Update('course')">Save Course</button>
                        <button type="button" class="btnAtitudeUpdate btn btn-success" onclick="return Update('attitude')">Save Attitude</button>
                        <button type="button" class="btnProjectUpdate btn btn-success" onclick="return Update('project')">Save Project</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    var idTrainee = 0;
    var classId = @HttpContextAccessor.HttpContext.Session.GetString("ClassId");
    $(document).ready(function () {
        loadBatch();
        $('#dataTraineeGrid').DataTable({
            "ajax": loadAllDataTraine(),
            "columnDefs": [
                { "orderable": false, "targets": 4 }
            ],
            "order": []
        });
        $(".traineeData").hide();
    });

    function confirm() {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure want to submit the score?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, submit it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                submitScore(idTrainee);
                swalWithBootstrapButtons.fire(
                    'Success!',
                    'Data has been submitted and counted automatically.',
                    'success'
                )
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Your imaginary data is safe :)',
                    'error'
                )
            }
        })
    }

    function submitScore(idTrainee) {
        $.ajax({
            url: "/Trainees/GetScore/" + idTrainee,
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                $('#dataTraineeGrid').DataTable().destroy();
                $('#dataTraineeGrid').DataTable({
                    "ajax": loadAllDataTraine(),
                    "columnDefs": [
                        { "orderable": false, "targets": 4 }
                    ],
                    "order": []
                });
                getDetailTrainee(idTrainee);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });
    }

    function Update(status) {
        var item = new Object();
        item.Id = $('#idEditModal').val();
        item.Value = $('#score').val();
        item.Trainee = idTrainee;
        item.CourseComprehension = $('#idEditType').val();
        item.Attitude = $('#idEditType').val();
        item.FinalProject = $('#idEditType').val();
        if (status == 'course') {
            var uri = '/CourseComprehensionTrainees/InsertOrUpdate/'
        } else if (status == 'attitude') {
            var uri = '/AttitudeTrainees/InsertOrUpdate/'
        } else if (status == 'project') {
            var uri = '/FinalProjectTrainees/InsertOrUpdate/'
        }
        console.log(status);
        console.log(uri);
        $.ajax({
            url: uri,
            //data: JSON.stringify(itemObj),
            type: "PUT",
            //contentType: "application/json;charset=utf-8",
            dataType: "json",
            data: item,
            success: function (result) {
                console.log(result);
                loadAllDataFinalProject(idTrainee);
                loadAllDataAttitude(idTrainee);
                loadAllDataCourseComprehension(idTrainee);
                $('#traineeModal').modal('hide');
                //var table = $('#dataGrid').dataTable({
                //    ajax: result
                //});\
                Swal.fire(
                    'Success',
                    'Data has been updated',
                    'success'
                );
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }

        });
    }

    function editDataModal(id, type, value, status) {
        if (status == 'project') {
            $('.courseTitle').hide();
            $('.attitudeTitle').hide();
            $('.projectTitle').show();
            $('.btnCourseUpdate').hide();
            $('.btnAtitudeUpdate').hide();
            $('.btnProjectUpdate').show();
        } else if (status == 'attitude') {
            $('.courseTitle').hide();
            $('.attitudeTitle').show();
            $('.projectTitle').hide();
            $('.btnCourseUpdate').hide();
            $('.btnAtitudeUpdate').show();
            $('.btnProjectUpdate').hide();
        } else {
            $('.courseTitle').show();
            $('.attitudeTitle').hide();
            $('.projectTitle').hide();
            $('.btnCourseUpdate').show();
            $('.btnAtitudeUpdate').hide();
            $('.btnProjectUpdate').hide();
        }
        $('#idEditModal').val(id);
        $('#idEditType').val(type);
        $('#score').val(value);
        $('#traineeModal').modal('show');
    }

    function changeBatch() {
        var id = document.getElementById("batch").value;
        if (id == 0) {
            $('#dataTraineeGrid').DataTable().destroy();
            $('#dataTraineeGrid').DataTable({
                "ajax": loadAllDataTraine(),
                "columnDefs": [
                    { "orderable": false, "targets": 4 }
                ],
                "order": []
            });
        } else {
            $('#dataTraineeGrid').DataTable().destroy();
            $('#dataTraineeGrid').DataTable({
                "ajax": loadAllDataTraineByBatch(id),
                "columnDefs": [
                    { "orderable": false, "targets": 4 }
                ],
                "order": []
            });
        }
    }

    function getDetailTraineeFinish(id) {
        idTrainee = id;
        getDetailTrainee(id);
    }
    function getDetailTraineeBootcamp(id) {
        idTrainee = id;
        getDetailTrainee(id);
    }
    function getDetailTrainee(id) {
        $(".traineeData").hide();
        $('#btnEdit').show();
        var grade = null;
        $.ajax({
            url: "trainees/detailtrainee/" + id,
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                var traineeName = '-';
                var traineeClass = '-';
                var traineeBatch = '-';
                var traineeTrainer = '-';
                var traineeGrade = '<h5>: -</h5>';
                var traineeStatus = '<h5>: Bootcamp</h5>';
                var traineeCourse = '<h5>: -</h5>';
                var traineeAttitude = '<h5>: -</h5>';
                var traineeProject = '<h5>: -</h5>';
                var traineeTotal = '<h5>: -</h5>';
                traineeName = '<h2>' + result.employee.firstName + " " + result.employee.lastName + '<h2>';
                traineeClass = '<h5>: ' + result.batchClass.class.name + '<h5>';
                traineeBatch = '<h5>: ' + result.batchClass.batch.name + '<h5>';
                traineeTrainer = '<h5>: ' + result.batchClass.trainer.firstName + " " + result.batchClass.trainer.lastName + '<h5>';
                if (result.grade != null) {
                    traineeGrade = '<h5>: ' + result.grade.name + '<h5>';
                    traineeStatus = '<h5>: Finish</h5>';
                    grade = result.grade;
                    traineeCourse = '<h5>: ' + result.courseScore + '<h5>';
                    traineeAttitude = '<h5>: ' + result.attitudeScore + '<h5>';
                    traineeProject = '<h5>: ' + result.projectScore + '<h5>';
                    traineeTotal = '<h5>: ' + result.totalScore + '<h5>';
                }
                $('#traineeName').html(traineeName);
                $('#traineeClass').html(traineeClass);
                $('#traineeBatch').html(traineeBatch);
                $('#traineeTrainer').html(traineeTrainer);
                $('#traineeGrade').html(traineeGrade);
                $('#traineeStatus').html(traineeStatus);
                $('#traineeStatus').html(traineeStatus);
                $('#traineeCourse').html(traineeCourse);
                $('#traineeAttitude').html(traineeAttitude);
                $('#traineeProject').html(traineeProject);
                $('#traineeTotal').html(traineeTotal);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });
        $('#courseComprehensionGrid').DataTable().destroy();
        $('#courseComprehensionGrid').DataTable({
            "ajax": loadAllDataCourseComprehension(id),
            "columnDefs": [
                { "orderable": false, "targets": 3 }
            ],
            "order": []
        });
        $('#attitudeGrid').DataTable().destroy();
        $('#attitudeGrid').DataTable({
            "ajax": loadAllDataAttitude(id),
            "columnDefs": [
                { "orderable": false, "targets": 3 }
            ]
        });
        $('#finalProjectGrid').DataTable().destroy();
        $('#finalProjectGrid').DataTable({
            "ajax": loadAllDataFinalProject(id),
            "columnDefs": [
                { "orderable": false, "targets": 3 }
            ]
        });
        if (grade != null) {
            $('#courseComprehensionGrid').DataTable().destroy();
            $('#courseComprehensionGrid').DataTable({
                "ajax": loadAllDataCourseComprehension(id),
                "columnDefs": [
                    { "orderable": false, "targets": 3 },
                    {
                        "targets": [3],
                        "visible": false
                    }
                ],
                "order": []
            });
            $('#attitudeGrid').DataTable().destroy();
            $('#attitudeGrid').DataTable({
                "ajax": loadAllDataAttitude(id),
                "columnDefs": [
                    { "orderable": false, "targets": 3 },
                    {
                        "targets": [3],
                        "visible": false
                    }
                ]
            });
            $('#finalProjectGrid').DataTable().destroy();
            $('#finalProjectGrid').DataTable({
                "ajax": loadAllDataFinalProject(id),
                "columnDefs": [
                    { "orderable": false, "targets": 3 },
                    {
                        "targets": [3],
                        "visible": false
                    }
                ]
            });
        }
        //loadAllDataFinalProject(id);
        //loadAllDataAttitude(id);
        //loadAllDataCourseComprehension(id);
        $('.btnSubmit').show();
        $('.btnPrint').hide();
        if (grade != null) {
            $('.colEdit').hide();
            $('.btnSubmit').hide();
            $('.btnPrint').show();
        }

        $(".traineeData").show();
        //window.location.hash = '#traineeData';
    }

    function loadAllDataFinalProject(id) {
        var nilai = new Map();
        $.ajax({
            url: "/Trainees/FinalProjectByTraineeList/" + id,
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                $.each(result, function (index, item) {
                    nilai.set(item.finalProject.id, item.value + ',' + item.id);
                });
                console.log(nilai);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });

        $.ajax({
            url: "/FinalProjects/List/",
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                var html = '';
                var no = 1;
                const obj = JSON.parse(result);
                $.each(obj, function (index, item) {
                    var value = '-';
                    var num = 0;
                    var id = 0;
                    if (nilai.get(item.Id) != null) {
                        value = nilai.get(item.Id).split(',')[0];
                        num = value;
                        id = nilai.get(item.Id).split(',')[1];
                    }

                    html += '<tr>';
                    html += '<td>' + no + '</td>';
                    html += '<td>' + item.Name + '</td>';
                    html += '<td>' + value + '</td>';
                    html += '<td class="colEdit"><button class="btn btn-primary" onclick="return editDataModal(' + id + ',' + item.Id + ','+ num + ',' + "'project'" + ')">Edit</button></td>';
                    html += '</tr>';
                    no++;
                });
                $('.finalProjectDataTable').html(html);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });
    }

    function loadAllDataAttitude(id) {
        var nilai = new Map();
        $.ajax({
            url: "/Trainees/AttitudeByTraineeList/" + id,
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                $.each(result, function (index, item) {
                    nilai.set(item.attitude.id, item.value + ',' + item.id);
                });
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });

        $.ajax({
            url: "/Attitudes/List/",
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                var html = '';
                var no = 1;
                const obj = JSON.parse(result);
                $.each(obj, function (index, item) {
                    var value = '-';
                    var id = 0;
                    var num = 0;
                    if (nilai.get(item.Id) != null) {
                        value = nilai.get(item.Id).split(',')[0];
                        num = value;
                        id = nilai.get(item.Id).split(',')[1];
                    }

                    html += '<tr>';
                    html += '<td>' + no + '</td>';
                    html += '<td>' + item.Name + '</td>';
                    html += '<td>' + value + '</td>';
                    html += '<td class="colEdit"><button class="btn btn-primary" onclick="return editDataModal(' + id + ',' + item.Id + ',' + num + ',' + "'attitude'" + ')">Edit</button></td>';
                    html += '</tr>';
                    no++;
                });
                $('.attitudeDataTable').html(html);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });
    }

    function loadAllDataCourseComprehension(id) {
        var nilai = new Map();
        $.ajax({
            url: "/Trainees/CourseComprehensionByTraineeList/" + id,
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                $.each(result, function (index, item) {
                    nilai.set(item.courseComprehension.id, item.value + ',' + item.id);
                });
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });

        $.ajax({
            url: "/CourseComprehensions/ByClassList/" + classId,
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                var html = '';
                var no = 1;
                //const obj = JSON.parse(result);
                $.each(result, function (index, item) {
                    var value = '-';
                    var id = 0;
                    var num = 0;
                    if (nilai.get(item.id) != null) {
                        value = nilai.get(item.id).split(',')[0];
                        num = value;
                        id = nilai.get(item.id).split(',')[1];
                    }

                    html += '<tr>';
                    html += '<td>' + no + '</td>';
                    html += '<td>' + item.name + '</td>';
                    html += '<td>' + value + '</td>';
                    html += '<td class="colEdit"><button class="btn btn-primary" onclick="return editDataModal(' + id + ',' + item.id + ',' + num + ',' + "'course'" + ')">Edit</button></td>';
                    html += '</tr>';
                    no++;
                });
                $('.courseComprehensionDataTable').html(html);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });
    }

    function loadAllDataTraineByBatch(id) {
        $.ajax({
            url: "/Trainees/TraineeByBatchList/" + id,
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                var html = '';
                $.each(result, function (index, item) {
                    var grade = '-';
                    var status = 'Bootcamp';
                    if (item.grade != null) {
                        grade = item.grade.name;
                        status = 'Finish';
                    }
                    html += '<tr>';
                    html += '<td>' + item.batchClass.batch.name + '</td>';
                    html += '<td>' + item.employee.firstName + " " + item.employee.lastName + '</td>';
                    html += '<td>' + grade + '</td>';
                    html += '<td>' + status + '</td>';
                    if (item.grade != null) {
                        html += '<td><button class="btn btn-success" onclick="return getDetailTraineeFinish(' + item.id + ')">Detail</button></td>';
                    } else {
                        html += '<td><button class="btn btn-primary" onclick="return getDetailTraineeBootcamp(' + item.id + ')">Edit</button></td>';
                    }
                    html += '</tr>';
                });
                $('.traineeDataTable').html(html);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });
    }

    function loadAllDataTraine() {
        $.ajax({
            url: "/Trainees/TraineeByTrainerList/"+@HttpContextAccessor.HttpContext.Session.GetString("Id"),
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                var html = '';
                $.each(result, function (index, item) {
                    var grade = '-';
                    var status = 'Bootcamp';
                    if (item.grade != null) {
                        grade = item.grade.name;
                        status = 'Finish';
                    }
                    html += '<tr>';
                    html += '<td>' + item.batchClass.batch.name + '</td>';
                    html += '<td>' + item.employee.firstName + " " + item.employee.lastName + '</td>';
                    html += '<td>' + grade + '</td>';
                    html += '<td>' + status + '</td>';
                    if (item.grade != null) {
                        html += '<td><button class="btn btn-success" onclick="return getDetailTraineeFinish(' + item.id + ')">Detail</button></td>';
                    } else {
                        html += '<td><button class="btn btn-primary" onclick="return getDetailTraineeBootcamp(' + item.id + ')">Edit</button></td>';
                    }
                    html += '</tr>';
                });
                $('.traineeDataTable').html(html);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });
    }

    function loadBatch() {
        $.ajax({
            url: "/Trainees/BatchByTrainerList/"+@HttpContextAccessor.HttpContext.Session.GetString("Id"),
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                var html = '<option value="0">All</option>';
                //const obj = JSON.parse(result);
                $.each(result, function (index, item) {
                    html += '<option value=' + item.id;
                    html += '>' + item.batch.name + '</option>';
                });
                $('#batch').html(html);
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!'
                })
            }
        });
    }
</script>